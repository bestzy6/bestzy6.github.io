<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bestzy's Blog</title><link>https://bestzy6.github.io/</link><description>Recent content on Bestzy's Blog</description><generator>Hugo</generator><language>zh-Hans</language><lastBuildDate>Mon, 04 Aug 2025 21:18:28 +0800</lastBuildDate><atom:link href="https://bestzy6.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>两则用于高效自学的Prompt</title><link>https://bestzy6.github.io/posts/learn-prompt/</link><pubDate>Mon, 04 Aug 2025 21:18:28 +0800</pubDate><guid>https://bestzy6.github.io/posts/learn-prompt/</guid><description>&lt;p>&lt;em>“自学可能陷入一种困境，不知道roadmap，没有benchmark，没有feedback，还会overfitting。”&lt;/em>&lt;/p></description></item><item><title>k8s集群搭建与部署详解</title><link>https://bestzy6.github.io/posts/k8s-cluster-setup-deployment-guide/</link><pubDate>Mon, 12 May 2025 21:18:28 +0800</pubDate><guid>https://bestzy6.github.io/posts/k8s-cluster-setup-deployment-guide/</guid><description>&lt;p>本文详细描述了部署K8s集群的步骤&lt;/p></description></item><item><title>Go隐式接口:解耦版本依赖的优雅之道</title><link>https://bestzy6.github.io/posts/go-implicit-interfaces-decoupling-dependencies/</link><pubDate>Sun, 13 Apr 2025 20:34:11 +0800</pubDate><guid>https://bestzy6.github.io/posts/go-implicit-interfaces-decoupling-dependencies/</guid><description>&lt;p>Go 语言的接口设计以其简洁和强大的解耦能力而闻名，本文将基于一个案例，探讨Go隐式接口如何助力我们构建更灵活、更易维护的系统。&lt;/p></description></item><item><title>正确使用Diff范围进行diff-cover增量覆盖率分析</title><link>https://bestzy6.github.io/posts/diff-cover-double/</link><pubDate>Fri, 04 Apr 2025 22:48:11 +0800</pubDate><guid>https://bestzy6.github.io/posts/diff-cover-double/</guid><description>&lt;p>本文记录了我在使用diff-cover进行增量代码覆盖率分析时会遇到错误。&lt;/p></description></item><item><title>【MIT6.5840】Lab5-Sharded Key/Value Service</title><link>https://bestzy6.github.io/posts/mit-lab5-sharded-keyvalue-service/</link><pubDate>Sun, 16 Mar 2025 22:48:11 +0800</pubDate><guid>https://bestzy6.github.io/posts/mit-lab5-sharded-keyvalue-service/</guid><description>&lt;p>本文将介绍MIT6.5840的Lab5的核心功能实现，完整代码见Github。&lt;/p></description></item><item><title>【MIT6.5840】Lab4-Fault-tolerant Key/Value Service</title><link>https://bestzy6.github.io/posts/mit-lab4-fault-tolerant-keyvalue-service/</link><pubDate>Sat, 15 Feb 2025 22:48:11 +0800</pubDate><guid>https://bestzy6.github.io/posts/mit-lab4-fault-tolerant-keyvalue-service/</guid><description>&lt;p>基于Raft实现一个键值存储服务（kvraft）是理解分布式存储系统设计的核心实践。本文将结合MIT 6.5840课程的Lab 3C，逐步实现一个高可用的键值存储系统。&lt;/p></description></item><item><title>【MIT6.5840】Lab3-Raft</title><link>https://bestzy6.github.io/posts/mit-lab3-raft/</link><pubDate>Sat, 15 Feb 2025 22:07:11 +0800</pubDate><guid>https://bestzy6.github.io/posts/mit-lab3-raft/</guid><description>&lt;p>在这篇博客中，我将详细介绍如何实现Raft分布式共识算法的核心功能，包括领导人选举、日志复制和提交等等。&lt;/p></description></item><item><title>MySQL分页查询踩坑记：从物理存储到结果排序的思考</title><link>https://bestzy6.github.io/posts/mysql-pagination-query-pitfalls/</link><pubDate>Wed, 22 Jan 2025 23:07:11 +0800</pubDate><guid>https://bestzy6.github.io/posts/mysql-pagination-query-pitfalls/</guid><description>&lt;p>最近在处理一个分页查询时，遇到了结果集顺序不确定的问题，这引发了我对 MySQL 查询执行模型的思考。&lt;/p></description></item><item><title>Linux文本处理三剑客：grep、sed和awk</title><link>https://bestzy6.github.io/posts/grep-awk-sed/</link><pubDate>Fri, 17 Jan 2025 22:19:28 +0800</pubDate><guid>https://bestzy6.github.io/posts/grep-awk-sed/</guid><description>&lt;p>Linux系统中的grep、sed和awk是三个强大的文本处理工具，它们各自具有独特的功能和应用场景。本文将详细介绍这三个命令的使用方法和常见应用场景。&lt;/p></description></item><item><title>如何成为一名卓有成效的工程师</title><link>https://bestzy6.github.io/posts/to-be-an-effective-engineer/</link><pubDate>Thu, 02 Jan 2025 22:36:28 +0800</pubDate><guid>https://bestzy6.github.io/posts/to-be-an-effective-engineer/</guid><description>&lt;p>《The Effective Engineer》中提出的杠杆率公式，强调了如何有效利用时间这一宝贵资源，以实现更高的工作效率和产出。&lt;/p></description></item><item><title>深入理解goconvey框架执行顺序</title><link>https://bestzy6.github.io/posts/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3goconvey%E6%A1%86%E6%9E%B6%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</link><pubDate>Sat, 30 Nov 2024 22:34:28 +0800</pubDate><guid>https://bestzy6.github.io/posts/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3goconvey%E6%A1%86%E6%9E%B6%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</guid><description>&lt;p>goconvey是一个非常好用的Go测试框架，本文将深入探讨goconvey的测试用例执行顺序。&lt;/p></description></item><item><title>如何计算Go代码单元测试增量覆盖率</title><link>https://bestzy6.github.io/posts/%E5%A6%82%E4%BD%95%E8%AE%A1%E7%AE%97go%E4%BB%A3%E7%A0%81%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%A2%9E%E9%87%8F%E8%A6%86%E7%9B%96%E7%8E%87/</link><pubDate>Sun, 17 Nov 2024 22:34:28 +0800</pubDate><guid>https://bestzy6.github.io/posts/%E5%A6%82%E4%BD%95%E8%AE%A1%E7%AE%97go%E4%BB%A3%E7%A0%81%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%A2%9E%E9%87%8F%E8%A6%86%E7%9B%96%E7%8E%87/</guid><description>&lt;p>文章讨论了如何使用 Go 语言进行单元测试和增量覆盖率分析，并介绍了如何提高代码覆盖率的效率。&lt;/p></description></item><item><title>Awesome Prompt</title><link>https://bestzy6.github.io/posts/awesome-prompt/</link><pubDate>Mon, 29 Jul 2024 22:40:11 +0800</pubDate><guid>https://bestzy6.github.io/posts/awesome-prompt/</guid><description>&lt;p>🤖🤖🤖 Enjoy!&lt;/p></description></item><item><title>使用Go语言基于ReAct范式实现LLM-Agent</title><link>https://bestzy6.github.io/posts/%E4%BD%BF%E7%94%A8go%E8%AF%AD%E8%A8%80%E5%9F%BA%E4%BA%8Ereact%E8%8C%83%E5%BC%8F%E5%AE%9E%E7%8E%B0llmagent/</link><pubDate>Mon, 29 Jul 2024 22:40:11 +0800</pubDate><guid>https://bestzy6.github.io/posts/%E4%BD%BF%E7%94%A8go%E8%AF%AD%E8%A8%80%E5%9F%BA%E4%BA%8Ereact%E8%8C%83%E5%BC%8F%E5%AE%9E%E7%8E%B0llmagent/</guid><description>&lt;p>本文介绍了如何使用Go语言实现基于ReAct框架的Agent。&lt;/p></description></item></channel></rss>